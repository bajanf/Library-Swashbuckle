<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Library.API</name>
    </assembly>
    <members>
        <member name="M:Library.API.Controllers.AuthorsController.GetAuthor(System.Guid)">
            <summary>
            Get author by his/hers id
            </summary>
            <param name="authorId">The id of the author you want to get</param>
            <returns>An author with id, firstname and lastname fields</returns>
        </member>
        <member name="M:Library.API.Controllers.AuthorsController.UpdateAuthor(System.Guid,Microsoft.AspNetCore.JsonPatch.JsonPatchDocument{Library.API.Models.AuthorForUpdate})">
            <summary>
            Partialy update an author
            </summary>
            <param name="authorId">The Id of the author you want to get</param>
            <param name="patchDocument">The set of operations to apply to the author</param>
            <returns>An ActionResult of the type Author</returns>
            <remarks>
            Sample request (this updates of the author's first name) \
            PATCH /authors/id \
            [ \
                { \
                    "op" : "replace", \
                    "path" : "/firstname", \
                    "value" : "new first name" \
                } \
            ] 
            </remarks>
        </member>
        <member name="M:Library.API.Controllers.BooksController.GetBook(System.Guid,System.Guid)">
            <summary>
            Gets a book by id for a specific author
            </summary>
            <param name="authorId">The id of the book author</param>
            <param name="bookId">The id of the book</param>
            <returns>An action Result of type Book</returns>
            <response code = "200">Returns the requested book</response>
        </member>
        <member name="M:Library.API.Controllers.BooksController.GetBookWithConcatenatedAuthorName(System.Guid,System.Guid)">
            <summary>
            Gets a book by id for a specific author
            </summary>
            <param name="authorId">The id of the book author</param>
            <param name="bookId">The id of the book</param>
            <returns>An action Result of type BookWithConcatenatedAuthorName</returns>
            <response code = "200">Returns the requested BookWithConcatenatedAuthorName</response>
        </member>
        <member name="M:Library.API.Controllers.BooksController.CreateBook(System.Guid,Library.API.Models.BookForCreation)">
            <summary>
            Create a book for a specific author
            </summary>
            <param name="authorId">The id of the book author</param>
            <param name="bookForCreation">The book to create</param>
            <returns>An AcctionResult of type Book</returns>
            <response code="422">Validation error</response>
        </member>
        <member name="M:Library.API.Controllers.BooksController.CreateBookWithAmountOfPages(System.Guid,Library.API.Models.BookForCreationWithAmountOfPages)">
            <summary>
            Create a book for a specific author
            </summary>
            <param name="authorId">The id of the book author</param>
            <param name="bookForCreationWithAmountOfPages">The book to create</param>
            <returns>An AcctionResult of type Book</returns>
            <response code="422">Validation error</response>
        </member>
        <member name="T:Library.API.Models.Author">
            <summary>
            An author with Id, FirstName and LastName fields
            </summary>
        </member>
        <member name="P:Library.API.Models.Author.Id">
            <summary>
            The Id of the author
            </summary>
        </member>
        <member name="P:Library.API.Models.Author.FirstName">
            <summary>
            The FirstName of the author
            </summary>
        </member>
        <member name="P:Library.API.Models.Author.LastName">
            <summary>
            The LastName of the author
            </summary>
        </member>
        <member name="T:Library.API.Models.AuthorForUpdate">
            <summary>
            An author with FirstName and LastName fields
            </summary>
        </member>
        <member name="P:Library.API.Models.AuthorForUpdate.FirstName">
            <summary>
            The FirstName of the author
            </summary>
        </member>
        <member name="P:Library.API.Models.AuthorForUpdate.LastName">
            <summary>
            The LastName of the author
            </summary>
        </member>
    </members>
</doc>
